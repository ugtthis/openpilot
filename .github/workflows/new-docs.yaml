name: New Docs

on:
  push:
    branches:
      - master
  pull_request:
  workflow_dispatch:

jobs:
  build-docs:
    runs-on: ubuntu-latest
    outputs:
      artifact_name: ${{ steps.set-artifact-name.outputs.artifact_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r docs/new/requirements.txt

      - name: Build Docs site
        run: |
          source .venv/bin/activate
          mkdocs build -f docs/new/mkdocs.yml

      - name: Set artifact name
        id: set-artifact-name
        run: echo "artifact_name=new-doc-build-artifacts-${{ github.run_id }}" >> $GITHUB_OUTPUT

      - name: Upload built project
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-artifact-name.outputs.artifact_name }}
          path: docs/new/site
          overwrite: true
          retention-days: 1

      - name: Deploy to Cloudflare Pages
        if: github.ref == 'refs/heads/master'
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_PAGES_TOKEN }}
          command: pages publish docs/new/site --project-name=openpilot-docs --branch=master

  preview-docs:
    needs: build-docs
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build-docs.outputs.artifact_name }}
          path: ./site

      - name: Verify artifact contents
        run: |
          if [ ! -d "./site" ] || [ -z "$(ls -A ./site)" ]; then
            echo "Error: Downloaded artifact is empty or missing"
            exit 1
          fi

      - name: Deploy to Cloudflare Pages
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_PAGES_TOKEN }}
          command: pages publish site --project-name=openpilot-docs-preview --branch=${{ github.head_ref }}

      - name: Comment URL on PR
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## openpilot docs preview
              Preview link for this PR: [Preview URL](${process.env.PREVIEW_URL})
              <!-- _(run_id **${process.env.GITHUB_RUN_ID}**)_ -->`
            })
        env:
          PREVIEW_URL: ${{ steps.deploy.outputs.url }}