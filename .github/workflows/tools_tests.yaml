name: tools

on:
  push:
    branches:
      - master
  pull_request:
  workflow_call:
    inputs:
      run_number:
        default: '1'
        required: true
        type: string
concurrency:
  group: tools-tests-ci-run-${{ inputs.run_number }}-${{ github.event_name == 'push' && github.ref == 'refs/heads/master' && github.run_id || github.head_ref || github.ref }}-${{ github.workflow }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  BASE_IMAGE: openpilot-base
  DOCKER_LOGIN: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

  BUILD: selfdrive/test/docker_build.sh base

  RUN: docker run --shm-size 2G -v $GITHUB_WORKSPACE:/tmp/openpilot -w /tmp/openpilot -e FILEREADER_CACHE=1 -e PYTHONPATH=/tmp/openpilot -e NUM_JOBS -e JOB_ID -e GITHUB_ACTION -e GITHUB_REF -e GITHUB_HEAD_REF -e GITHUB_SHA -e GITHUB_REPOSITORY -e GITHUB_RUN_ID -v $GITHUB_WORKSPACE/.ci_cache/scons_cache:/tmp/scons_cache -v $GITHUB_WORKSPACE/.ci_cache/comma_download_cache:/tmp/comma_download_cache -v $GITHUB_WORKSPACE/.ci_cache/openpilot_cache:/tmp/openpilot_cache $BASE_IMAGE /bin/bash -c


jobs:
  simulator_driving:
    name: simulator driving
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Build openpilot
      run: |
        ${{ env.RUN }} "scons -j$(nproc)"
    - name: Run bridge test
      run: |
        ${{ env.RUN }} "source selfdrive/test/setup_xvfb.sh && \
                        source selfdrive/test/setup_vsound.sh && \
                        CI=1 pytest tools/sim/tests/test_metadrive_bridge.py"

  test_compatibility:
    name: test 20.04 + 3.11
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - name: Installing ubuntu dependencies
      run: INSTALL_EXTRA_PACKAGES=no tools/install_ubuntu_dependencies.sh
    - name: Installing python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11.4'
    - name: Installing pip
      run: pip install pip==24.0
    - name: Installing uv
      run: pip install uv
    - name: git LFS
      run: git lfs pull
    - run: echo "CACHE_COMMIT_DATE=$(git log -1 --pretty='format:%cd' --date=format:'%Y-%m-%d-%H:%M')" >> $GITHUB_ENV
    - name: Getting scons cache
      uses: 'actions/cache@v4'
      with:
        path: /tmp/scons_cache
        key: scons-${{ runner.arch }}-ubuntu2004-${{ env.CACHE_COMMIT_DATE }}-${{ github.sha }}
        restore-keys: |
          scons-${{ runner.arch }}-ubuntu2004-${{ env.CACHE_COMMIT_DATE }}
          scons-${{ runner.arch }}-ubuntu2004
    - name: Building openpilot
      run: uv run scons -u -j$(nproc)

  devcontainer:
    name: devcontainer
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
    - uses: ./.github/workflows/setup-with-retry
    - name: Use local image for testing devcontainer with latest base image
      run: |
        echo "USE_LOCAL_IMAGE=true" >> "$GITHUB_ENV"
    - name: Setup Dev Container CLI
      run: npm install -g @devcontainers/cli
    - name: Build dev container image
      run: ./scripts/retry.sh devcontainer build --workspace-folder .
    - name: Run dev container
      run: |
        mkdir -p /tmp/devcontainer_scons_cache/
        cp -r $GITHUB_WORKSPACE/.ci_cache/scons_cache/. /tmp/devcontainer_scons_cache/
        devcontainer up --workspace-folder .
    - name: Test environment
      run: |
        devcontainer exec --workspace-folder . scons -j$(nproc) cereal/ common/
        devcontainer exec --workspace-folder . pip3 install pip-install-test
        devcontainer exec --workspace-folder . touch /home/batman/.comma/auth.json
        devcontainer exec --workspace-folder . sudo touch /root/test.txt
